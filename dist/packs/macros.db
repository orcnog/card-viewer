{"name":"View a Card","type":"script","author":"92aKSz8wx6tVXpQm","img":"modules/orcnog-card-viewer/assets/card-view-fancy.svg","scope":"global","command":"// Requires Orcnog's Card Viewer\n// Peeks at a card, but does not draw and discard it.\n\nlet deckName = 'Deck of Many Things';\nlet card = 'Gem'; // card name or ID\nlet faceDown = true;\nlet whisper = false;\nlet share = false;\n\nOrcnogFancyCardDealer({\n   deckName: deckName,\n}).view(card, faceDown, whisper, share);","flags":{"core":{"sourceId":"Macro.dq0cclm7r5tOc4pL"},"exportSource":{"world":"v11-test","system":"worldbuilding","coreVersion":"11.305","systemVersion":"0.8.1"}},"_stats":{"systemId":"swade","systemVersion":"2.4.2","coreVersion":"10.303","createdTime":1686860654456,"modifiedTime":1688760983048,"lastModifiedBy":"92aKSz8wx6tVXpQm"},"folder":null,"sort":0,"ownership":{"default":0,"92aKSz8wx6tVXpQm":3},"_id":"PSnKE22o6C86rSvS"}
{"name":"Draw and show a card in a regular popout","type":"script","author":"92aKSz8wx6tVXpQm","img":"modules/orcnog-card-viewer/assets/card-draw.svg","scope":"global","command":"// Does not require Orcnog's Card Viewer!\n// A helper macro to automate drawing a random card and viewing it in a native Image Popout.\n\nlet deckName = \"Deck of Many Things\";\nlet discardPileName = \"My Discard Pile\";\nlet drawMethod = \"RANDOM\"; // should be \"RANDOM\" or \"TOP\"\n\n\n// Smart detect a discard pile existence.\nif (!discardPileName ) discardPileName = SmartMatchDiscardName(deckName);\n\n// get reference to src/dst cards objects\nconst src_cards = game.cards.filter(cards => cards.data.name===deckName)[0];\nconst dst_cards = game.cards.filter(cards => cards.data.name===discardPileName)[0]\n                  || await Cards.create({name: deckName + \" - Discard Pile\", type:\"pile\"});\n\n// deal 1 card and grab reference to the dealt card\ntry {\n await src_cards.deal([dst_cards], 1, {\n   how: CONST.CARD_DRAW_MODES[drawMethod],\n   action: 'deal orcnog_card_viewer_noshow'\n });\n} catch {}\nlet most_recent_drawn = dst_cards.cards.contents[dst_cards.cards.size - 1];\nconsole.log(most_recent_drawn);\nconst cardId = most_recent_drawn._id;\nconst name = most_recent_drawn.faces[0].name;\nconst front = most_recent_drawn.faces[0].img;\nconst back = most_recent_drawn.back.img;\nconst desc = most_recent_drawn.faces[0].text;\n\n// Show it as an Image Popout...\nconst ip = new ImagePopout(front, {});\nif (ip.render(true)) {\n    // Share the image with other connected players\n    ip.shareImage();\n}\n\n// Whisper the card instructions to the DM\nconst dm = game.users.find(u => u.isGM && u.active);\nif (dm) {\n  const messageContent = `<div class=\"card-draw orcnog-card-viewer-msg flexrow\" data-deck=\"${deckName}\" data-card=\"${cardId}\" data-back=\"${back}\">\n      <img class=\"card-face\" src=\"${front}\" alt=\"${name}\"/>\n      <h4 class=\"card-name\">${name}</h4>\n   </div>\n   <p>${desc}</p>`\n  ChatMessage.create({ content: messageContent, whisper: [dm._id] });\n} else {\n  ui.notifications.warn(\"DM user not found.\");\n}\n\n/**\n * SmartMatchDiscardName - Find the Discard Pile for a specified deck name\n * @param {String} name - The name of the deck you want to find the Discard Pile for\n * @returns {Cards|null} - The Cards object representing the Discard Pile or null if not found\n */\nfunction SmartMatchDiscardName(name) {\n  const stopwords = [\"deck\", \"cards\", \"card\", \"of\", \"in\", \"on\", \"the\", \"a\", \"an\"];\n  const matchwordsOr = [\"discard\", \"drawn\", \"played\", \"used\"];\n\n  const namePattern = new RegExp(\n    name.replace(new RegExp(`\\\\b(?:${stopwords.join(\"|\")})\\\\b\\\\s*`, \"gi\"), \"\"),\n    \"i\"\n  );\n  const discardPattern = new RegExp(`(?:${matchwordsOr.join(\"|\")})`, \"i\");\n  const fallbackPattern = /Discard(?:\\s+Pile)?/i;\n\n  for (const [deckId, deck] of game.cards.entries()) {\n    if ((namePattern.test(deck.name) && discardPattern.test(deck.name)) || fallbackPattern.test(deck.name)) {\n      console.log(`Discard Pile found for deck \"${name}\":`, deck.name);\n      return deck.name;\n    }\n  }\n\n  return null;\n}","flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.D8iIDVZZi08bN4wG"},"exportSource":{"world":"v11-test","system":"worldbuilding","coreVersion":"11.305","systemVersion":"0.8.1"}},"_stats":{"systemId":"swade","systemVersion":"2.4.2","coreVersion":"10.303","createdTime":1685747438944,"modifiedTime":1688760984549,"lastModifiedBy":"92aKSz8wx6tVXpQm"},"folder":null,"sort":0,"ownership":{"default":0,"92aKSz8wx6tVXpQm":3},"_id":"TOWwsX1u4d43kZYb"}
{"name":"Draw a Card","type":"script","author":"92aKSz8wx6tVXpQm","img":"modules/orcnog-card-viewer/assets/card-draw-fancy.svg","scope":"global","command":"// Requires Orcnog's Card Viewer\n// Draws, views, and discards a card from a given deck name. Leave discardPile null to smart-match an existing discard pile name or auto-create a new one named \"[your deck name] - Discard Pile\".\n\nlet deckName = 'Deck of Many Things';\nlet discardPile = 'My Discard Pile';\nlet share = true;\n\nOrcnogFancyCardDealer({\n   deckName: deckName ,\n   discardPileName: discardPile\n}).draw(share);","flags":{"core":{"sourceId":"Macro.UsTgJD5uFf9tOGYO"},"exportSource":{"world":"v11-test","system":"worldbuilding","coreVersion":"11.305","systemVersion":"0.8.1"}},"_stats":{"systemId":"swade","systemVersion":"2.4.2","coreVersion":"10.303","createdTime":1686860654456,"modifiedTime":1688760985877,"lastModifiedBy":"92aKSz8wx6tVXpQm"},"folder":null,"sort":0,"ownership":{"default":0,"92aKSz8wx6tVXpQm":3},"_id":"XCvcqGgOsDhwXDR9"}
{"name":"View Any Image as a Card","type":"script","author":"92aKSz8wx6tVXpQm","img":"modules/orcnog-card-viewer/assets/image-view-fancy.svg","scope":"global","command":"// Requires Orcnog's Card Viewer\n// This macro demonstrates the easiest way to view any image (URL or local path) as a flippable card. The card back image is automatically provided.\n\nlet img = 'modules/orcnog-card-viewer/assets/beefy-abraham-lincoln.webp';\nlet backImg = 'modules/orcnog-card-viewer/assets/orcnogback.webp'; // optional\nlet cardBorder = '#da6';\nlet shareToAll = true;\n\nOrcnogFancyDisplay({\n   front: img,\n   back: backImg,\n   border: cardBorder\n}).render(shareToAll)","flags":{"core":{"sourceId":"Macro.W2KFsMfjHy8uC9AY"},"exportSource":{"world":"v11-test","system":"worldbuilding","coreVersion":"11.305","systemVersion":"0.8.1"}},"_stats":{"systemId":"swade","systemVersion":"2.4.2","coreVersion":"10.303","createdTime":1686762627106,"modifiedTime":1688760981671,"lastModifiedBy":"92aKSz8wx6tVXpQm"},"folder":null,"sort":0,"ownership":{"default":0,"92aKSz8wx6tVXpQm":3},"_id":"uRc3ORD74VGZBLcS"}
